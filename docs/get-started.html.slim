- set_meta_tags title: 'Vital | Get Started'

.row.bg-red.light-text
  .section.center
    h1 Get Started

.row
  .section
    h1 Setup / Installation
    hr
    h2 Quickest (Compiled)
    p Import into stylesheet or as a stylesheet link tag:
    p
      code https://cdn.rawgit.com/doximity/vital/v#{Vital::VERSION}/dist/css/vital.min.css
    p
      strong
        ' Note:
      ' Vital v2.x is not backwards compatible with v1.x. Some things may break. You may need to do some refactoring.
    hr
    h2 Recommended (Source)
    p
      ' Vital works best when manipulated directly so download the latest package release from
      => link_to 'GitHub', 'https://github.com/doximity/vital/releases'
      | and extract its contents into your one of your project's sources directory. This installation method is preferred if you want to develop your own unique branding while keeping code output to a minimum. One possible caveat to this method is you sacrifice future upgradability as you may encounter breaking changes.
    p
      | The released tarballs include different flavors of the framework that you can use depending on your needs. Its structure looks as the following:

    = code do
      |
        dist/
        ├── css
        │   └── ... precompiled CSS files ...
        ├── sass
        │   └── ... framework sources as SASS files ...
        └── scss
            └── ... framework sources as SCSS files ...

    p
      | Depending on your project needs, copy the appropriate version of the stylesheets (
      code CSS
      ' ,
      code SASS
      ' or
      code SCSS
      | ) directory over to a directory within your project's sources that can be accessed from a browser.
    p
      ' Read the
      => link_to 'documentation', '/components.html'
      | for information on the basics of setting up a common application layout.

    hr
    h2 Rails
    p
      ' Add the gem to your project's
      code Gemfile
      | :
    = code('ruby') do
      |
        gem 'vital'
    p
      ' And add the following at the top of your project's
      code app/assets/stylesheets/application.sass.css
      | :
    = code('sass') do
      |
        @import vital/all
    p
      code> vital/all
      ' includes everything. You can also import individual partials depending on your needs:

    = code('sass') do
      |
        // Vendor
        @import vital/normalize

        // Components
        @import vital/variables
        @import vital/mixins
        @import vital/icons
        @import vital/grid
        @import vital/base
        @import vital/buttons
        @import vital/footer
        @import vital/forms
        @import vital/header
        @import vital/heroes
        @import vital/loaders
        @import vital/notice
        @import vital/pagination
        @import vital/tables
        @import vital/tabs
        @import vital/syntax
        @import vital/helpers

        // Layouts
        @import vital/layouts/background_cards
        @import vital/layouts/bordered_lists
        @import vital/layouts/photo_collages
        @import vital/layouts/feed_cards

        // Your customizations
        @import custom

    p
      ' Most partials are optional.
    p
      ' Small reusable classes should be placed in
      code> _helpers.sass
      ' and larger, more unique code should live in
      code _custom.sass
      | .

    h2 Application layout
    p Your typical application layout HTML would look something like this:

    = code('erb') do
      |
        <!DOCTYPE html>
        <html>
          <head>
            <meta content="IE=edge" http-equiv="X-UA-Compatible">
            <meta charset="UTF-8">
            <meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no" name="viewport">
            <title>Vital</title>
            <%= favicon_tag 'images/favicon.ico' %>
            <%= stylesheet_link_tag :vital %>
          </head>
          <body>
            <%= partial 'layouts/header' %>
            <div class="contents">
              <%= yield %>
            <%= partial 'layouts/footer' %>
          </body>
        </html>

    hr
    h2 Bower / NPM
    = code('sh') do
      |
        bower install --save vital
        npm install --save vital-css
    p
      ' And reference the assets from within your project's
      code bower_components/vital
      ' or
      code node_modules/vital-css
      | directory

    h2 Webpack
    p
      ' Install vital-css and dependencies:
    = code('sh') do
      |
        npm install --save css-loader sass-loader node-sass extract-text-webpack-plugin vital-css

    p
      ' Add the
      code vital-css
      ' module in your
      code webpack.config.js
      ' in order to easily import it in any Sass file:

    = code('js') do
      |
        const ExtractTextPlugin = require('extract-text-webpack-plugin');

        module.exports = {
          entry: './src',
          output: {
            path: __dirname + '/build',
            filename: 'bundle.js'
          },
          module: {
            rules: [
              {
                test: /\.sass/,
                use: ExtractTextPlugin.extract({
                  fallback: 'style-loader',

                  use: [
                    { loader: 'css-loader' },
                    {
                      loader: 'sass-loader',
                      options: {
                        includePaths: [require('vital-css').includePaths]
                      }
                    }
                  ]
                })
              }
            ]
          },
          plugins: [
            new ExtractTextPlugin("styles.css")
          ]
        };

    p
      ' And then you can just reference all of Vital with a single import within your
      code .sass
      '  files:
      = code("css") do
        |
          @import "vital"
      ' Or include only the components you need:
      = code("sass") do
        |
          @import "vital/base"
          @import "vital/variables"
          @import "vital/forms"
